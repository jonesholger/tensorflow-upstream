#!/usr/bin/env bash
#
# prerequisites: install python3
# sudo apt-get install python3-numpy python3-dev python3-pip python3-wheel
#
# configure with python3
# PYTHON_BIN_PATH=/usr/bin/python3 ./configure
#
# press enter all the way
#
#export PATH=$HOME/workspace/miniconda/bin:$PATH
#eval "$($HOME/workspace/miniconda/bin/conda shell.bash hook)"
#conda activate /g/g0/holger/workspace/miniconda/env_rocm

ROCM_INSTALL_DIR=/opt/rocm-5.7.1
ROCM_PATH=$ROCM_INSTALL_DIR
export ROCM_TOOLKIT_PATH=$ROCM_PATH
export HIP_PATH=$ROCM_PATH/hip
export CC=amdclang
export CXX=amdclang++

# Explicitly delete the old whl packages in the /tmp/tensorflow_pkg dir
# Doing so comes in handy when the TF version number changes, because
# it will cause the last line in this script (pip3 install ...) to fail.
# Not deleting the old whl packages results in the last line installing
# TF from the previous whl pakcage (if present) and not the current one
# that was just built by this script. Since this error is not apparent, it
# can lead to a lot of frustation and lost time trying to figure why the
# changes made in the current build are not working!
TF_PKG_LOC=/tmp/holger/tensorflow_pkg
PYTHON_VERSION=`python3 -c "import sys;print(f'{sys.version_info.major}.{sys.version_info.minor}')"`
export TF_PYTHON_VERSION=$PYTHON_VERSION
export TF_NEED_CLANG=1
export TF_NEED_ROCM=1
export PYTHON_BIN_PATH=$HOME/workspace/miniconda/env_rocm/bin/python3
export PYTHONPATH="/g/g0/holger/workspace/miniconda/env_rocm/lib/python3.9/site-packages"

export RESOURCE_OPTION="--local_ram_resources=60000 --local_cpu_resources=100 --jobs=50"


bazel build $RESOURCE_OPTION --subcommands --config=opt --config=rocm  //tensorflow/tools/pip_package:build_pip_package --verbose_failures &&
bazel-bin/tensorflow/tools/pip_package/build_pip_package $TF_PKG_LOC --rocm &&
pip3 install --upgrade $TF_PKG_LOC/tensorflow*.whl

